/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.facebook.graph.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Currency type.
 */
public class Currency {
    private String fallbackValue;
    private String code;
    private int amount1000;

    /**
     * Default constructor.
     */
    public Currency() {
    }

    /**
     * Initialization constructor.
     * @param  fallbackValue  String value for fallbackValue.
     * @param  code  String value for code.
     * @param  amount1000  int value for amount1000.
     */
    public Currency(
            String fallbackValue,
            String code,
            int amount1000) {
        this.fallbackValue = fallbackValue;
        this.code = code;
        this.amount1000 = amount1000;
    }

    /**
     * Getter for FallbackValue.
     * Default text if localization fails.
     * @return Returns the String
     */
    @JsonGetter("fallback_value")
    public String getFallbackValue() {
        return fallbackValue;
    }

    /**
     * Setter for FallbackValue.
     * Default text if localization fails.
     * @param fallbackValue Value for String
     */
    @JsonSetter("fallback_value")
    public void setFallbackValue(String fallbackValue) {
        this.fallbackValue = fallbackValue;
    }

    /**
     * Getter for Code.
     * Currency code as defined in ISO 4217.
     * @return Returns the String
     */
    @JsonGetter("code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * Currency code as defined in ISO 4217.
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Amount1000.
     * Amount multiplied by 1000.
     * @return Returns the int
     */
    @JsonGetter("amount_1000")
    public int getAmount1000() {
        return amount1000;
    }

    /**
     * Setter for Amount1000.
     * Amount multiplied by 1000.
     * @param amount1000 Value for int
     */
    @JsonSetter("amount_1000")
    public void setAmount1000(int amount1000) {
        this.amount1000 = amount1000;
    }

    /**
     * Converts this Currency into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Currency [" + "fallbackValue=" + fallbackValue + ", code=" + code + ", amount1000="
                + amount1000 + "]";
    }

    /**
     * Builds a new {@link Currency.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Currency.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(fallbackValue, code, amount1000);
        return builder;
    }

    /**
     * Class to build instances of {@link Currency}.
     */
    public static class Builder {
        private String fallbackValue;
        private String code;
        private int amount1000;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  fallbackValue  String value for fallbackValue.
         * @param  code  String value for code.
         * @param  amount1000  int value for amount1000.
         */
        public Builder(String fallbackValue, String code, int amount1000) {
            this.fallbackValue = fallbackValue;
            this.code = code;
            this.amount1000 = amount1000;
        }

        /**
         * Setter for fallbackValue.
         * @param  fallbackValue  String value for fallbackValue.
         * @return Builder
         */
        public Builder fallbackValue(String fallbackValue) {
            this.fallbackValue = fallbackValue;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for amount1000.
         * @param  amount1000  int value for amount1000.
         * @return Builder
         */
        public Builder amount1000(int amount1000) {
            this.amount1000 = amount1000;
            return this;
        }

        /**
         * Builds a new {@link Currency} object using the set fields.
         * @return {@link Currency}
         */
        public Currency build() {
            return new Currency(fallbackValue, code, amount1000);
        }
    }
}
