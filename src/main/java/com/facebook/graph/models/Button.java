/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.facebook.graph.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Button type.
 */
public class Button {
    private String type;
    private String title;
    private String id;

    /**
     * Default constructor.
     */
    public Button() {
        type = "reply";
    }

    /**
     * Initialization constructor.
     * @param  type  String value for type.
     * @param  title  String value for title.
     * @param  id  String value for id.
     */
    public Button(
            String type,
            String title,
            String id) {
        this.type = type;
        this.title = title;
        this.id = id;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Title.
     * Button title. It cannot be an empty string and must be unique within the message. Emojis are
     * supported, markdown is not.
     * @return Returns the String
     */
    @JsonGetter("title")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * Button title. It cannot be an empty string and must be unique within the message. Emojis are
     * supported, markdown is not.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for Id.
     * Unique identifier for your button. This ID is returned in the webhook when the button is
     * clicked by the user.
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier for your button. This ID is returned in the webhook when the button is
     * clicked by the user.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Converts this Button into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Button [" + "type=" + type + ", title=" + title + ", id=" + id + "]";
    }

    /**
     * Builds a new {@link Button.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Button.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(type)
                .title(getTitle())
                .id(getId());
        return builder;
    }

    /**
     * Class to build instances of {@link Button}.
     */
    public static class Builder {
        private String type = "reply";
        private String title;
        private String id;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  type  String value for type.
         */
        public Builder(String type) {
            this.type = type;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Builds a new {@link Button} object using the set fields.
         * @return {@link Button}
         */
        public Button build() {
            return new Button(type, title, id);
        }
    }
}
