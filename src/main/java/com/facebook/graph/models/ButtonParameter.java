/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.facebook.graph.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ButtonParameter type.
 */
public class ButtonParameter {
    private ButtonParameterTypeEnum type;
    private String payload;
    private String text;

    /**
     * Default constructor.
     */
    public ButtonParameter() {
    }

    /**
     * Initialization constructor.
     * @param  type  ButtonParameterTypeEnum value for type.
     * @param  payload  String value for payload.
     * @param  text  String value for text.
     */
    public ButtonParameter(
            ButtonParameterTypeEnum type,
            String payload,
            String text) {
        this.type = type;
        this.payload = payload;
        this.text = text;
    }

    /**
     * Getter for Type.
     * Indicates the type of parameter for the button.
     * @return Returns the ButtonParameterTypeEnum
     */
    @JsonGetter("type")
    public ButtonParameterTypeEnum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Indicates the type of parameter for the button.
     * @param type Value for ButtonParameterTypeEnum
     */
    @JsonSetter("type")
    public void setType(ButtonParameterTypeEnum type) {
        this.type = type;
    }

    /**
     * Getter for Payload.
     * Required for quick_reply buttons. Developer-defined payload that is returned when the button
     * is clicked in addition to the display text on the button.
     * @return Returns the String
     */
    @JsonGetter("payload")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPayload() {
        return payload;
    }

    /**
     * Setter for Payload.
     * Required for quick_reply buttons. Developer-defined payload that is returned when the button
     * is clicked in addition to the display text on the button.
     * @param payload Value for String
     */
    @JsonSetter("payload")
    public void setPayload(String payload) {
        this.payload = payload;
    }

    /**
     * Getter for Text.
     * Required for URL buttons. Developer-provided suffix that is appended to the predefined prefix
     * URL in the template.
     * @return Returns the String
     */
    @JsonGetter("text")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getText() {
        return text;
    }

    /**
     * Setter for Text.
     * Required for URL buttons. Developer-provided suffix that is appended to the predefined prefix
     * URL in the template.
     * @param text Value for String
     */
    @JsonSetter("text")
    public void setText(String text) {
        this.text = text;
    }

    /**
     * Converts this ButtonParameter into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ButtonParameter [" + "type=" + type + ", payload=" + payload + ", text=" + text
                + "]";
    }

    /**
     * Builds a new {@link ButtonParameter.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ButtonParameter.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(type)
                .payload(getPayload())
                .text(getText());
        return builder;
    }

    /**
     * Class to build instances of {@link ButtonParameter}.
     */
    public static class Builder {
        private ButtonParameterTypeEnum type;
        private String payload;
        private String text;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  type  ButtonParameterTypeEnum value for type.
         */
        public Builder(ButtonParameterTypeEnum type) {
            this.type = type;
        }

        /**
         * Setter for type.
         * @param  type  ButtonParameterTypeEnum value for type.
         * @return Builder
         */
        public Builder type(ButtonParameterTypeEnum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for payload.
         * @param  payload  String value for payload.
         * @return Builder
         */
        public Builder payload(String payload) {
            this.payload = payload;
            return this;
        }

        /**
         * Setter for text.
         * @param  text  String value for text.
         * @return Builder
         */
        public Builder text(String text) {
            this.text = text;
            return this;
        }

        /**
         * Builds a new {@link ButtonParameter} object using the set fields.
         * @return {@link ButtonParameter}
         */
        public ButtonParameter build() {
            return new ButtonParameter(type, payload, text);
        }
    }
}
