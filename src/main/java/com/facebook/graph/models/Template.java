/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.facebook.graph.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Template type.
 */
public class Template {
    private String name;
    private Language language;
    private List<Component> components;

    /**
     * Default constructor.
     */
    public Template() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  language  Language value for language.
     * @param  components  List of Component value for components.
     */
    public Template(
            String name,
            Language language,
            List<Component> components) {
        this.name = name;
        this.language = language;
        this.components = components;
    }

    /**
     * Getter for Name.
     * Name of the template.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the template.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Language.
     * Specifies the language the template may be rendered in. Only the deterministic language
     * policy works with media template messages.
     * @return Returns the Language
     */
    @JsonGetter("language")
    public Language getLanguage() {
        return language;
    }

    /**
     * Setter for Language.
     * Specifies the language the template may be rendered in. Only the deterministic language
     * policy works with media template messages.
     * @param language Value for Language
     */
    @JsonSetter("language")
    public void setLanguage(Language language) {
        this.language = language;
    }

    /**
     * Getter for Components.
     * Array of components objects containing the parameters of the message.
     * @return Returns the List of Component
     */
    @JsonGetter("components")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Component> getComponents() {
        return components;
    }

    /**
     * Setter for Components.
     * Array of components objects containing the parameters of the message.
     * @param components Value for List of Component
     */
    @JsonSetter("components")
    public void setComponents(List<Component> components) {
        this.components = components;
    }

    /**
     * Converts this Template into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Template [" + "name=" + name + ", language=" + language + ", components="
                + components + "]";
    }

    /**
     * Builds a new {@link Template.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Template.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, language)
                .components(getComponents());
        return builder;
    }

    /**
     * Class to build instances of {@link Template}.
     */
    public static class Builder {
        private String name;
        private Language language;
        private List<Component> components;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  language  Language value for language.
         */
        public Builder(String name, Language language) {
            this.name = name;
            this.language = language;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for language.
         * @param  language  Language value for language.
         * @return Builder
         */
        public Builder language(Language language) {
            this.language = language;
            return this;
        }

        /**
         * Setter for components.
         * @param  components  List of Component value for components.
         * @return Builder
         */
        public Builder components(List<Component> components) {
            this.components = components;
            return this;
        }

        /**
         * Builds a new {@link Template} object using the set fields.
         * @return {@link Template}
         */
        public Template build() {
            return new Template(name, language, components);
        }
    }
}
