/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.facebook.graph.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Text type.
 */
public class Text {
    private String body;
    private Boolean previewUrl;

    /**
     * Default constructor.
     */
    public Text() {
        previewUrl = false;
    }

    /**
     * Initialization constructor.
     * @param  body  String value for body.
     * @param  previewUrl  Boolean value for previewUrl.
     */
    public Text(
            String body,
            Boolean previewUrl) {
        this.body = body;
        this.previewUrl = previewUrl;
    }

    /**
     * Getter for Body.
     * Required for text messages. The text of the text message which can contain URLs which begin
     * with http:// or https:// and formatting. See available formatting options here. If you
     * include URLs in your text and want to include a preview box in text messages (preview_url:
     * true), make sure the URL starts with http:// or https:// —https:// URLs are preferred. You
     * must include a hostname, since IP addresses will not be matched.
     * @return Returns the String
     */
    @JsonGetter("body")
    public String getBody() {
        return body;
    }

    /**
     * Setter for Body.
     * Required for text messages. The text of the text message which can contain URLs which begin
     * with http:// or https:// and formatting. See available formatting options here. If you
     * include URLs in your text and want to include a preview box in text messages (preview_url:
     * true), make sure the URL starts with http:// or https:// —https:// URLs are preferred. You
     * must include a hostname, since IP addresses will not be matched.
     * @param body Value for String
     */
    @JsonSetter("body")
    public void setBody(String body) {
        this.body = body;
    }

    /**
     * Getter for PreviewUrl.
     * By default, WhatsApp recognizes URLs and makes them clickable, but you can also include a
     * preview box with more information about the link. Set this field to true if you want to
     * include a URL preview box. The majority of the time, the receiver will see a URL they can
     * click on when you send an URL, set preview_url to true, and provide a body object with a http
     * or https link. URL previews are only rendered after one of the following has happened: The
     * business has sent a message template to the user. The user initiates a conversation with a
     * "click to chat" link. The user adds the business phone number to their address book and
     * initiates a conversation.
     * @return Returns the Boolean
     */
    @JsonGetter("preview_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPreviewUrl() {
        return previewUrl;
    }

    /**
     * Setter for PreviewUrl.
     * By default, WhatsApp recognizes URLs and makes them clickable, but you can also include a
     * preview box with more information about the link. Set this field to true if you want to
     * include a URL preview box. The majority of the time, the receiver will see a URL they can
     * click on when you send an URL, set preview_url to true, and provide a body object with a http
     * or https link. URL previews are only rendered after one of the following has happened: The
     * business has sent a message template to the user. The user initiates a conversation with a
     * "click to chat" link. The user adds the business phone number to their address book and
     * initiates a conversation.
     * @param previewUrl Value for Boolean
     */
    @JsonSetter("preview_url")
    public void setPreviewUrl(Boolean previewUrl) {
        this.previewUrl = previewUrl;
    }

    /**
     * Converts this Text into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Text [" + "body=" + body + ", previewUrl=" + previewUrl + "]";
    }

    /**
     * Builds a new {@link Text.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Text.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(body)
                .previewUrl(getPreviewUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link Text}.
     */
    public static class Builder {
        private String body;
        private Boolean previewUrl = false;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  body  String value for body.
         */
        public Builder(String body) {
            this.body = body;
        }

        /**
         * Setter for body.
         * @param  body  String value for body.
         * @return Builder
         */
        public Builder body(String body) {
            this.body = body;
            return this;
        }

        /**
         * Setter for previewUrl.
         * @param  previewUrl  Boolean value for previewUrl.
         * @return Builder
         */
        public Builder previewUrl(Boolean previewUrl) {
            this.previewUrl = previewUrl;
            return this;
        }

        /**
         * Builds a new {@link Text} object using the set fields.
         * @return {@link Text}
         */
        public Text build() {
            return new Text(body, previewUrl);
        }
    }
}
