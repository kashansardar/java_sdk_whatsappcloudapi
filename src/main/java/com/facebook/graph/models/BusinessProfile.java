/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.facebook.graph.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for BusinessProfile type.
 */
public class BusinessProfile {
    private String id;
    private String messagingProduct;
    private String address;
    private String description;
    private VerticalEnum vertical;
    private String email;
    private List<String> websites;
    private String profilePictureUrl;

    /**
     * Default constructor.
     */
    public BusinessProfile() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  messagingProduct  String value for messagingProduct.
     * @param  address  String value for address.
     * @param  description  String value for description.
     * @param  vertical  VerticalEnum value for vertical.
     * @param  email  String value for email.
     * @param  websites  List of String value for websites.
     * @param  profilePictureUrl  String value for profilePictureUrl.
     */
    public BusinessProfile(
            String id,
            String messagingProduct,
            String address,
            String description,
            VerticalEnum vertical,
            String email,
            List<String> websites,
            String profilePictureUrl) {
        this.id = id;
        this.messagingProduct = messagingProduct;
        this.address = address;
        this.description = description;
        this.vertical = vertical;
        this.email = email;
        this.websites = websites;
        this.profilePictureUrl = profilePictureUrl;
    }

    /**
     * Getter for Id.
     * ID of the business profile object.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * ID of the business profile object.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for MessagingProduct.
     * The messaging service used for the request. Always set it to "whatsapp" if you are using the
     * WhatsApp Business API.
     * @return Returns the String
     */
    @JsonGetter("messaging_product")
    public String getMessagingProduct() {
        return messagingProduct;
    }

    /**
     * Setter for MessagingProduct.
     * The messaging service used for the request. Always set it to "whatsapp" if you are using the
     * WhatsApp Business API.
     * @param messagingProduct Value for String
     */
    @JsonSetter("messaging_product")
    public void setMessagingProduct(String messagingProduct) {
        this.messagingProduct = messagingProduct;
    }

    /**
     * Getter for Address.
     * Address of the business.
     * @return Returns the String
     */
    @JsonGetter("address")
    public String getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * Address of the business.
     * @param address Value for String
     */
    @JsonSetter("address")
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for Description.
     * Description of the business.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Description of the business.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Vertical.
     * Industry of the business. This can be either an empty string or one of the accepted values.
     * @return Returns the VerticalEnum
     */
    @JsonGetter("vertical")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public VerticalEnum getVertical() {
        return vertical;
    }

    /**
     * Setter for Vertical.
     * Industry of the business. This can be either an empty string or one of the accepted values.
     * @param vertical Value for VerticalEnum
     */
    @JsonSetter("vertical")
    public void setVertical(VerticalEnum vertical) {
        this.vertical = vertical;
    }

    /**
     * Getter for Email.
     * The contact email address (in valid email format) of the business.
     * @return Returns the String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * The contact email address (in valid email format) of the business.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Websites.
     * The URLs associated with the business. For instance, a website, Facebook Page, or Instagram.
     * You must include the http:// or https:// portion of the URL.
     * @return Returns the List of String
     */
    @JsonGetter("websites")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getWebsites() {
        return websites;
    }

    /**
     * Setter for Websites.
     * The URLs associated with the business. For instance, a website, Facebook Page, or Instagram.
     * You must include the http:// or https:// portion of the URL.
     * @param websites Value for List of String
     */
    @JsonSetter("websites")
    public void setWebsites(List<String> websites) {
        this.websites = websites;
    }

    /**
     * Getter for ProfilePictureUrl.
     * URL of the profile picture generated from a call to the Resumable Upload API.
     * @return Returns the String
     */
    @JsonGetter("profile_picture_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getProfilePictureUrl() {
        return profilePictureUrl;
    }

    /**
     * Setter for ProfilePictureUrl.
     * URL of the profile picture generated from a call to the Resumable Upload API.
     * @param profilePictureUrl Value for String
     */
    @JsonSetter("profile_picture_url")
    public void setProfilePictureUrl(String profilePictureUrl) {
        this.profilePictureUrl = profilePictureUrl;
    }

    /**
     * Converts this BusinessProfile into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BusinessProfile [" + "id=" + id + ", messagingProduct=" + messagingProduct
                + ", address=" + address + ", description=" + description + ", vertical=" + vertical
                + ", email=" + email + ", websites=" + websites + ", profilePictureUrl="
                + profilePictureUrl + "]";
    }

    /**
     * Builds a new {@link BusinessProfile.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BusinessProfile.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, messagingProduct, address, description)
                .vertical(getVertical())
                .email(getEmail())
                .websites(getWebsites())
                .profilePictureUrl(getProfilePictureUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link BusinessProfile}.
     */
    public static class Builder {
        private String id;
        private String messagingProduct;
        private String address;
        private String description;
        private VerticalEnum vertical;
        private String email;
        private List<String> websites;
        private String profilePictureUrl;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  messagingProduct  String value for messagingProduct.
         * @param  address  String value for address.
         * @param  description  String value for description.
         */
        public Builder(String id, String messagingProduct, String address, String description) {
            this.id = id;
            this.messagingProduct = messagingProduct;
            this.address = address;
            this.description = description;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for messagingProduct.
         * @param  messagingProduct  String value for messagingProduct.
         * @return Builder
         */
        public Builder messagingProduct(String messagingProduct) {
            this.messagingProduct = messagingProduct;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  String value for address.
         * @return Builder
         */
        public Builder address(String address) {
            this.address = address;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for vertical.
         * @param  vertical  VerticalEnum value for vertical.
         * @return Builder
         */
        public Builder vertical(VerticalEnum vertical) {
            this.vertical = vertical;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for websites.
         * @param  websites  List of String value for websites.
         * @return Builder
         */
        public Builder websites(List<String> websites) {
            this.websites = websites;
            return this;
        }

        /**
         * Setter for profilePictureUrl.
         * @param  profilePictureUrl  String value for profilePictureUrl.
         * @return Builder
         */
        public Builder profilePictureUrl(String profilePictureUrl) {
            this.profilePictureUrl = profilePictureUrl;
            return this;
        }

        /**
         * Builds a new {@link BusinessProfile} object using the set fields.
         * @return {@link BusinessProfile}
         */
        public BusinessProfile build() {
            return new BusinessProfile(id, messagingProduct, address, description, vertical, email,
                    websites, profilePictureUrl);
        }
    }
}
