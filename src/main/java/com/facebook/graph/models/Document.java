/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.facebook.graph.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Document type.
 */
public class Document {
    private String id;
    private String link;
    private String caption;
    private String filename;

    /**
     * Default constructor.
     */
    public Document() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  link  String value for link.
     * @param  caption  String value for caption.
     * @param  filename  String value for filename.
     */
    public Document(
            String id,
            String link,
            String caption,
            String filename) {
        this.id = id;
        this.link = link;
        this.caption = caption;
        this.filename = filename;
    }

    /**
     * Getter for Id.
     * It is the media object ID. Required when you are not using a link.
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * It is the media object ID. Required when you are not using a link.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Link.
     * The protocol and URL of the media to be sent. Use only with HTTP/HTTPS URLs. Required when
     * you are not using an uploaded media ID.
     * @return Returns the String
     */
    @JsonGetter("link")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLink() {
        return link;
    }

    /**
     * Setter for Link.
     * The protocol and URL of the media to be sent. Use only with HTTP/HTTPS URLs. Required when
     * you are not using an uploaded media ID.
     * @param link Value for String
     */
    @JsonSetter("link")
    public void setLink(String link) {
        this.link = link;
    }

    /**
     * Getter for Caption.
     * Describes the specified document media.
     * @return Returns the String
     */
    @JsonGetter("caption")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCaption() {
        return caption;
    }

    /**
     * Setter for Caption.
     * Describes the specified document media.
     * @param caption Value for String
     */
    @JsonSetter("caption")
    public void setCaption(String caption) {
        this.caption = caption;
    }

    /**
     * Getter for Filename.
     * Describes the filename for the specific document.
     * @return Returns the String
     */
    @JsonGetter("filename")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFilename() {
        return filename;
    }

    /**
     * Setter for Filename.
     * Describes the filename for the specific document.
     * @param filename Value for String
     */
    @JsonSetter("filename")
    public void setFilename(String filename) {
        this.filename = filename;
    }

    /**
     * Converts this Document into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Document [" + "id=" + id + ", link=" + link + ", caption=" + caption + ", filename="
                + filename + "]";
    }

    /**
     * Builds a new {@link Document.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Document.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .link(getLink())
                .caption(getCaption())
                .filename(getFilename());
        return builder;
    }

    /**
     * Class to build instances of {@link Document}.
     */
    public static class Builder {
        private String id;
        private String link;
        private String caption;
        private String filename;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for link.
         * @param  link  String value for link.
         * @return Builder
         */
        public Builder link(String link) {
            this.link = link;
            return this;
        }

        /**
         * Setter for caption.
         * @param  caption  String value for caption.
         * @return Builder
         */
        public Builder caption(String caption) {
            this.caption = caption;
            return this;
        }

        /**
         * Setter for filename.
         * @param  filename  String value for filename.
         * @return Builder
         */
        public Builder filename(String filename) {
            this.filename = filename;
            return this;
        }

        /**
         * Builds a new {@link Document} object using the set fields.
         * @return {@link Document}
         */
        public Document build() {
            return new Document(id, link, caption, filename);
        }
    }
}
